@using ADCOnline.Simple.Json
@using ADCOnline.Utils
@using ADCOnline.Simple.Item
@model SearchViewModel
@{
    ViewBag.Title = ResourceData.Resource("KetQuaTimKiem", ViewBag.Lang);
    ViewBag.Name = ResourceData.Resource("KetQuaTimKiem", ViewBag.Lang);
    ViewBag.Description = ResourceData.Resource("KetQuaTimKiem", ViewBag.Lang);
    ViewBag.Keywords = ResourceData.Resource("KetQuaTimKiem", ViewBag.Lang);
    Layout = "~/Views/shared/_LayoutNoIndex.cshtml";
}
<div class="detail-ser padd-module mt-header">
    <div class="container">
        <h1 class="title-module">(@(Model.ListArticle.Count + Model.ListProductItemJson.Count())) @ResourceData.Resource("KetQua", ViewBag.Lang) trong @ViewBag.Elapsed</h1>
        <div id="Result">
            @if (Model.ListArticle.Any() || Model.ListProductItemJson.Any())
            {
                <div class="result-search">
                    @foreach (WebsiteProductItemJson item in Model.ListProductItemJson)
                    {
                        @*string link = Context.Request.Scheme + "://" + Context.Request.Host + Utility.Link(item.NameAscii, string.Empty, item.LinkUrl);*@
                        <div class="item">
                            <a class="img" href="@Utility.Link(item.NameAscii, string.Empty, item.LinkUrl)" title="@item.Name">
                                @Html.Raw(Utility.GetImage(WebConfig.PathServer, item.UrlPicture, item.Name))
                            </a>
                            <div class="right">
                                <div class="item-name">
                                    <h3><a href="@Utility.Link(item.NameAscii, string.Empty, item.LinkUrl)" title="@item.Name">@item.Name</a></h3>
                                    <div class="time">
                                        <p>
                                            @if (!string.IsNullOrEmpty(item.ModuleName))
                                            {
                                                <span class="module">@item.ModuleName</span>
                                            }
                                        </p>
                                        <svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 512 512"><path d="M464 256A208 208 0 1 1 48 256a208 208 0 1 1 416 0zM0 256a256 256 0 1 0 512 0A256 256 0 1 0 0 256zM232 120V256c0 8 4 15.5 10.7 20l96 64c11 7.4 25.9 4.4 33.3-6.7s4.4-25.9-6.7-33.3L280 243.2V120c0-13.3-10.7-24-24-24s-24 10.7-24 24z" /></svg>
                                        @(item.CreatedDate.HasValue ? item.CreatedDate.Value.ToString("dd/MM/yyyy") : string.Empty)
                                    </div>
                                    @if (!string.IsNullOrEmpty(item.Description))
                                    {
                                        <div class="_desc">@Html.Raw(item.Description)</div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                    @foreach (WebsiteContentItem item in Model.ListArticle)
                    {
                        @*string link = Context.Request.Scheme + "://" + Context.Request.Host + Utility.Link(item.NameAscii, string.Empty, item.LinkUrl);*@
                        <div class="item">
                            <a class="img" href="@Utility.Link(item.NameAscii, string.Empty, item.LinkUrl)" title="@item.Name">
                                @Html.Raw(Utility.GetImage(WebConfig.PathServer, item.UrlPicture, item.Name))
                            </a>
                            <div class="right">
                                <div class="item-name">
                                    <h3><a href="@Utility.Link(item.NameAscii, string.Empty, item.LinkUrl)" title="@item.Name">@item.Name</a></h3>
                                    <div class="time">
                                        <p>
                                            @if (!string.IsNullOrEmpty(item.ModuleName))
                                            {
                                                <span class="module">@item.ModuleName</span>
                                            }
                                        </p>
                                        <svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 512 512"><path d="M464 256A208 208 0 1 1 48 256a208 208 0 1 1 416 0zM0 256a256 256 0 1 0 512 0A256 256 0 1 0 0 256zM232 120V256c0 8 4 15.5 10.7 20l96 64c11 7.4 25.9 4.4 33.3-6.7s4.4-25.9-6.7-33.3L280 243.2V120c0-13.3-10.7-24-24-24s-24 10.7-24 24z" /></svg>
                                        @(item.CreatedDate.HasValue ? item.CreatedDate.Value.ToString("dd/MM/yyyy") : string.Empty)
                                    </div>
                                    @if (!string.IsNullOrEmpty(item.Description))
                                    {
                                        <div class="_desc">@Html.Raw(item.Description)</div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="not-found spdvmn-ct">
                    <div class="container">
                        <vc:other-component code="OtherSearch"></vc:other-component>
                    </div>
                </div>
            }
        </div>
    </div>
</div>