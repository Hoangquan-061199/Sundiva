@model ModuleViewModels
@using ADCOnline.Simple.Item
@using ADCOnline.Simple.Json
@using ADCOnline.Utils
@using Microsoft.Extensions.Options
@using Website.Utils
@inject IOptions<GoogleCaptchaConfig> GoogleCaptChaConfig
@{
    if (ViewBag.NoIndex == true)
    {
        Layout = "~/Views/shared/_LayoutNoIndex.cshtml";
    }
    if (Model.ModuleItem != null)
    {
        ViewBag.Title = Model.ModuleItem.SEOTitle + ((Model.Page > 1) ? (" - " + ResourceData.Resource("Page", ViewBag.Lang) + " " + Model.Page) : string.Empty);
        if (Model.Page == 1)
        {
            ViewBag.Title = Model.ModuleItem.SEOTitle;
        }
        ViewBag.Name = Model.ModuleItem.Name;
        ViewBag.Description = Model.ModuleItem.SeoDescription;
        ViewBag.Keywords = Model.ModuleItem.SeoKeyword;
    }
    ViewBag.IndexGoogle = ViewBag.NoIndex == true ? "noodp,noindex,nofollow" : Model.ModuleItem.IndexGoogle;
    ViewBag.Canonical = !string.IsNullOrEmpty(Model.ModuleItem.Canonical) ? Model.ModuleItem.Canonical : string.Empty;
    ViewBag.UrlOgImage = !string.IsNullOrEmpty(Model.ModuleItem.UrlPicture) ? Model.ModuleItem.UrlPicture : string.Empty;
    ViewBag.OgImageAlt = !string.IsNullOrEmpty(Model.ModuleItem.SEOTitle) ? Model.ModuleItem.SEOTitle : string.Empty;
    ViewBag.IsSchema = false;
    ViewBag.LangModule = Model.ModuleItem.Lang;
    ViewBag.Banner = true;
}
@if (Model.ModuleItem != null)
{
    <link href="~/lib/jquery/css/jquery.datetimepicker.css" rel="stylesheet" />
    if (Model.ModuleItem.AlbumGalleryItems.Any())
    {
        if (Model.ModuleItem.AlbumGalleryItems.Count() == 1)
        {
            <div class="banner margin0 banner-content">
                <div class="item">
                    @Html.Raw(Utility.GetImage(WebConfig.PathServer, Model.ModuleItem.AlbumGalleryItems.FirstOrDefault(x => x.AlbumType == 3).AlbumUrl, Model.ModuleItem.Name))
                </div>
            </div>
        }
        else
        {
            <div class="banner margin0 banner-content">
                <div class="slide-index owl-carousel owl-theme">
                    @foreach (AlbumGalleryItem item in Model.ModuleItem.AlbumGalleryItems.Where(x => x.AlbumType == 3))
                    {
                        <div class="item">
                            @Html.Raw(Utility.GetImage(WebConfig.PathServer, item.AlbumUrl, Model.ModuleItem.Name))
                        </div>
                    }
                </div>
            </div>

        }
    }

    <div class="path">
        <div class="container">
            <a href="/" title="@ResourceData.Resource("TrangChu", ViewBag.Lang)">
                <svg xmlns="http://www.w3.org/2000/svg" height="15" viewBox="0 0 576 512">
                    <path d="M575.8 255.5c0 18-15 32.1-32 32.1h-32l.7 160.2c0 2.7-.2 5.4-.5 8.1V472c0 22.1-17.9 40-40 40H456c-1.1 0-2.2 0-3.3-.1c-1.4 .1-2.8 .1-4.2 .1H416 392c-22.1 0-40-17.9-40-40V448 384c0-17.7-14.3-32-32-32H256c-17.7 0-32 14.3-32 32v64 24c0 22.1-17.9 40-40 40H160 128.1c-1.5 0-3-.1-4.5-.2c-1.2 .1-2.4 .2-3.6 .2H104c-22.1 0-40-17.9-40-40V360c0-.9 0-1.9 .1-2.8V287.6H32c-18 0-32-14-32-32.1c0-9 3-17 10-24L266.4 8c7-7 15-8 22-8s15 2 21 7L564.8 231.5c8 7 12 15 11 24z" />
                </svg>
            </a>
            <div class="icon">
                <svg xmlns="http://www.w3.org/2000/svg" width="8" height="8" fill="currentColor"
                     class="bi bi-chevron-right" viewBox="0 0 16 16">
                    <path fill-rule="evenodd"
                          d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z" />
                </svg>
            </div>
            <vc:bread-crumb-component module-id="@Model.ModuleItem.ParentID"></vc:bread-crumb-component>
            <div>@Model.ModuleItem.Name</div>
        </div>
    </div>
    <div class="car-rental">
        <div class="container">
            <h1 class="big-title uppercase border">@Model.ModuleItem.Name</h1>
            <div class="paragraph justify detail-content">
                @Html.Raw(Model.ModuleItem.Description)
            </div>
            <div class="contact-form">
                <div class="left">
                    @Html.Raw(Utility.GetImage(WebConfig.PathServer, Model.ModuleItem.UrlPicture, Model.ModuleItem.Name))
                </div>
                <div class="right form-contact-main form-rental">
                    <form action="@Url.Action("CarRental", "Home")" method="post" id="CarRental" autocomplete="off">
                        <div class="big-title uppercase title-content">
                            <p><strong>@ResourceData.Resource("ThueXeTrucTuyen", ViewBag.Lang)</strong></p>
                        </div>
                        <div class="group-input">
                            <input type="text" autocomplete="off" id="StartDate" class="dateddmmyyy" name="StartDate" placeholder="@ResourceData.Resource("NgayDi", ViewBag.Lang)*">
                            <input type="text" autocomplete="off" id="EndDate" class="dateddmmyyy" name="EndDate" placeholder="@ResourceData.Resource("NgayVe", ViewBag.Lang)*">
                            <p class="error-date">@ResourceData.Resource("NgayDiNhoHonNgayVe", ViewBag.Lang)</p>
                        </div>
                        <div class="group-input">
                            <input type="text" name="Destination" placeholder="@ResourceData.Resource("NhapDiemDen", ViewBag.Lang)*">
                            <input type="text" name="PointGo" placeholder="@ResourceData.Resource("NhapDiemDi", ViewBag.Lang)*">
                        </div>
                        <div class="group-input">
                            <input type="text" name="FullName" placeholder="@ResourceData.Resource("HoTen", ViewBag.Lang)*">
                            <input type="text" name="Email" placeholder="Email*">
                        </div>
                        <div class="group-input">
                            <input type="text" name="Phone" placeholder="@ResourceData.Resource("DienThoai", ViewBag.Lang)*">
                            <select name="Service">
                                <option value="0">@ResourceData.Resource("ChonDichVuXe", ViewBag.Lang)</option>
                                @if (Model.ListServiceCars.Any())
                                {
                                    @foreach (var item in Model.ListServiceCars)
                                    {
                                        <option value="@item.ID">@item.Name</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="textarea-form">
                            <textarea name="Content" placeholder="@ResourceData.Resource("NoiDung", ViewBag.Lang)"></textarea>
                        </div>
                        <button type="submit" class="more uppercase bold fs16 btnCarRental">
                            <p>@ResourceData.Resource("GuiLienHe", ViewBag.Lang)</p>
                            <div class="icon">
                                <svg xmlns="http://www.w3.org/2000/svg" width="9" height="9" fill="currentColor"
                                     class="bi bi-chevron-right" viewBox="0 0 16 16">
                                    <path fill-rule="evenodd"
                                          d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z" />
                                </svg>
                            </div>
                        </button>
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="Token" id="ModelTokenCarRental" />
                    </form>
                    <script src="https://www.google.com/recaptcha/api.js?render=@GoogleCaptChaConfig.Value.SiteKey"></script>
                    <script>
                        function getTokenCarRental() {
                            grecaptcha.ready(function () {
                                grecaptcha.execute('@GoogleCaptChaConfig.Value.SiteKey', { action: 'submit' }).then(function (token) {
                                    document.getElementById('ModelTokenCarRental').value = token;
                                });
                            });
                        }
                        setInterval(getTokenCarRental, 11500);
                        $(function () {
                            DateViNow("#StartDate");
                            DateViNow("#EndDate");
                            $('#StartDate').change(function () {
                                let startdate = $(this).val();
                                let enddate = $('#EndDate').val();
                                if (startdate && enddate) {
                                    let istrue
                                    let date1 = new Date(startdate.replace(/(\d{2})\/(\d{2})\/(\d{4})/, "$2/$1/$3"));
                                    let date2 = new Date(enddate.replace(/(\d{2})\/(\d{2})\/(\d{4})/, "$2/$1/$3"));
                                    if (date2 < date1) {
                                        $('#CarRental button').addClass('disabled');
                                        $('#StartDate, #EndDate').addClass('error');
                                        $('.error-date').addClass('show');
                                    } else {
                                        $('#CarRental button').removeClass('disabled');
                                        $('#StartDate, #EndDate').removeClass('error');
                                        $('.error-date').removeClass('show');
                                    }

                                }
                            })
                            $('#EndDate').change(function () {
                                let startdate = $('#StartDate').val();
                                let enddate = $(this).val();
                                if (startdate && enddate) {
                                    let date1 = new Date(startdate.replace(/(\d{2})\/(\d{2})\/(\d{4})/, "$2/$1/$3"));
                                    let date2 = new Date(enddate.replace(/(\d{2})\/(\d{2})\/(\d{4})/, "$2/$1/$3"));
                                    if (date2 < date1) {
                                        $('#CarRental button').addClass('disabled');
                                        $('#StartDate, #EndDate').addClass('error');
                                        $('.error-date').addClass('show');
                                    } else {
                                        $('#CarRental button').removeClass('disabled');
                                        $('#StartDate, #EndDate').removeClass('error');
                                        $('.error-date').removeClass('show');
                                    }
                                }
                            })


                            getTokenCarRental();
                            var process = new ProcessData();
                            process.SendCarRental();
                        });
                    </script>
                </div>
            </div>
            <div class="paragraph justify detail-content">
                @Html.Raw(Model.ModuleItem.Content)
            </div>
            <div class="list-rental">
                @foreach (var item in Model.ListProductItem)
                {
                    <div class="item item-rental">
                        <div class="img">
                            @Html.Raw(Utility.GetImage(WebConfig.PathServer, item.UrlPicture, item.Name))
                        </div>
                        <div class="text">
                            <h3 class="big-title title-item">@item.Name</h3>
                            <div class="paragraph">
                                <table>
                                    <tr>
                                        <td>@ResourceData.Resource("HieuXe", ViewBag.Lang)</td>
                                        <td>: @item.CompanyCar</td>
                                    </tr>
                                    <tr>
                                        <td>@ResourceData.Resource("DoiXe", ViewBag.Lang)</td>
                                        <td>: @item.Quantity</td>
                                    </tr>
                                    <tr>
                                        <td>@ResourceData.Resource("KieuXe", ViewBag.Lang)</td>
                                        <td>: @item.Title</td>
                                    </tr>
                                    <tr>
                                        <td>@ResourceData.Resource("GiaThueNgay", ViewBag.Lang)</td>
                                        <td>: @Utility.GetFormatPriceType(item.Price, 1, ResourceData.Resource("LienHe", ViewBag.Lang), true)</td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <script src="~/lib/jquery/js/jquery.datetimepicker.full.js"></script>
    string breadcrum = string.Empty;
    if (Model.BreadcrumbList.Any())
    {
        int b = 1;
        foreach (var module in Model.BreadcrumbList.OrderByDescending(x => x.OrderTree))
        {
            if (string.IsNullOrEmpty(module.LinkUrl) || (!string.IsNullOrEmpty(module.LinkUrl) && !module.LinkUrl.Contains("http://") && !module.LinkUrl.Contains("https://")))
            {
                breadcrum += ",{\"@type\": \"ListItem\", \"position\": " + b + ", \"name\": \"" + Html.Raw(module.Name) + "\",\"item\": \"" + WebConfig.Website + Utility.Link(module.NameAscii, string.Empty, module.LinkUrl) + "\"}";
            }
            b++;
        }
    }
    @if (Model.Schema != null && !string.IsNullOrEmpty(Model.Schema.Content))
    {
        @Html.Raw(Model.Schema.Content.Replace("[Breadcrumb]", breadcrum))
    }
}