@model ModuleViewModels
@using ADCOnline.Simple.Item
@using ADCOnline.Simple.Json
@using ADCOnline.Utils
@{
    if (ViewBag.NoIndex == true)
    {
        Layout = "~/Views/shared/_LayoutNoIndex.cshtml";
    }
    if (Model.ModuleItem != null)
    {
        ViewBag.Title = Model.ModuleItem.SEOTitle;
        if (Model.Page == 1)
        {
            ViewBag.Title = Model.ModuleItem.SEOTitle;
        }
        ViewBag.Name = Model.ModuleItem.Name;
        ViewBag.Description = Model.ModuleItem.SeoDescription;
        ViewBag.Keywords = Model.ModuleItem.SeoKeyword;
    }
    ViewBag.IndexGoogle = ViewBag.NoIndex == true ? "noodp,noindex,nofollow" : Model.ModuleItem.IndexGoogle;
    ViewBag.Canonical = !string.IsNullOrEmpty(Model.ModuleItem.Canonical) ? Model.ModuleItem.Canonical : string.Empty;
    ViewBag.UrlOgImage = !string.IsNullOrEmpty(Model.ModuleItem.UrlPicture) ? Model.ModuleItem.UrlPicture : string.Empty;
    ViewBag.OgImageAlt = !string.IsNullOrEmpty(Model.ModuleItem.SEOTitle) ? Model.ModuleItem.SEOTitle : string.Empty;
    ViewBag.IsSchema = false;
    ViewBag.Banner = true;
}
@if (Model.ModuleItem != null)
{
    if (Model.ModuleItem.AlbumGalleryItems.Any(x => x.AlbumType == 3))
    {
        if (Model.ModuleItem.AlbumGalleryItems.Count(x => x.AlbumType == 3) == 1)
        {
            <div class="banner">
                <div class="img-banner">
                    @Html.Raw(Utility.GetImage(WebConfig.PathServer, Model.ModuleItem.AlbumGalleryItems.FirstOrDefault(x => x.AlbumType == 3).AlbumUrl, Model.ModuleItem.Name))
                </div>
            </div>
        }
        else
        {
            <div class="banner">
                <div class="slide-index owl-carousel owl-theme">
                    @foreach (AlbumGalleryItem item in Model.ModuleItem.AlbumGalleryItems.Where(x => x.AlbumType == 3))
                    {
                        <div class="img-banner">
                            @Html.Raw(Utility.GetImage(WebConfig.PathServer, item.AlbumUrl, Model.ModuleItem.Name))
                        </div>
                    }
                </div>
            </div>
        }
    }
    <div class="path">
        <div class="container">
            <a href="/" title="@ResourceData.Resource("TrangChu", ViewBag.Lang)">
                @ResourceData.Resource("TrangChu", ViewBag.Lang)
            </a>
            <div class="icon">
                <svg xmlns="http://www.w3.org/2000/svg" width="8" height="8" fill="currentColor"
                     class="bi bi-chevron-right" viewBox="0 0 16 16">
                    <path fill-rule="evenodd"
                          d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z" />
                </svg>
            </div>
            <vc:bread-crumb-component module-id="@Model.ModuleItem.ParentID"></vc:bread-crumb-component>
            <div>@Model.ModuleItem.Name</div>
        </div>
    </div>

    <div class="collection">
        <div class="container">
            <h1 class="big-title center before">@Model.ModuleItem.Name</h1>
            @if (!string.IsNullOrEmpty(Model.ModuleItem.Content))
            {
                <div class="paragraph fs17 justify detail-content">
                    @Html.Raw(Model.ModuleItem.Content)
                </div>
            }
            <div class="list">
                @if (Model.WebsiteModulesItems.Any(x => x.ParentID > 0))
                {
                    @foreach (WebsiteModulesItem item in Model.WebsiteModulesItems.Where(x => x.ParentID > 0).OrderBy(x => x.OrderDisplay))
                    {
                        <div class="item item-collection">
                            <a href="@Utility.Link(item.NameAscii, string.Empty, item.LinkUrl)" title="@item.Name" class="img">
                                <span class="hover"></span>
                                @Html.Raw(Utility.GetImage(WebConfig.PathServer, item.UrlPicture, item.Name))
                            </a>
                            <h3 class="big-title title-product color-white center"><a href="@Utility.Link(item.NameAscii, string.Empty, item.LinkUrl)" title="@item.Name">@item.Name</a></h3>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
}