@model ModuleViewModels
@using ADCOnline.Simple.Item
@using ADCOnline.Simple.Json
@using ADCOnline.Utils
@{
    if (ViewBag.NoIndex == true)
    {
        Layout = "~/Views/shared/_LayoutNoIndex.cshtml";
    }
    if (Model.ModuleItem != null)
    {
        ViewBag.Title = Model.ModuleItem.SEOTitle;
        if (Model.Page == 1)
        {
            ViewBag.Title = Model.ModuleItem.SEOTitle;
        }
        ViewBag.Name = Model.ModuleItem.Name;
        ViewBag.Description = Model.ModuleItem.SeoDescription;
        ViewBag.Keywords = Model.ModuleItem.SeoKeyword;
    }
    ViewBag.IndexGoogle = ViewBag.NoIndex == true ? "noodp,noindex,nofollow" : Model.ModuleItem.IndexGoogle;
    ViewBag.Canonical = !string.IsNullOrEmpty(Model.ModuleItem.Canonical) ? Model.ModuleItem.Canonical : string.Empty;
    ViewBag.UrlOgImage = !string.IsNullOrEmpty(Model.ModuleItem.UrlPicture) ? Model.ModuleItem.UrlPicture : string.Empty;
    ViewBag.OgImageAlt = !string.IsNullOrEmpty(Model.ModuleItem.SEOTitle) ? Model.ModuleItem.SEOTitle : string.Empty;
    ViewBag.IsSchema = false;
    ViewBag.Banner = true;
}
@if (Model.ModuleItem != null)
{

    <div class="banner">
        @if (Model.ModuleItem.AlbumGalleryItems.Any(x =>x.AlbumType == 3))
        {
            if (Model.ModuleItem.AlbumGalleryItems.Count(x => x.AlbumType == 3) == 1)
            {

                <div class="banner banner-content">
                    <div class="item">
                        @Html.Raw(Utility.GetImage(WebConfig.PathServer, Model.ModuleItem.AlbumGalleryItems.FirstOrDefault(x => x.AlbumType == 3).AlbumUrl, Model.ModuleItem.Name))
                    </div>
                </div>
            }
            else
            {
                <div class="banner banner-content">
                    <div class="slide-index owl-carousel owl-theme">
                        @foreach (AlbumGalleryItem item in Model.ModuleItem.AlbumGalleryItems.Where(x => x.AlbumType == 3))
                        {
                            <div class="item">
                                @Html.Raw(Utility.GetImage(WebConfig.PathServer, item.AlbumUrl, Model.ModuleItem.Name))
                            </div>
                        }
                    </div>
                </div>

            }
        }
        else
        {
            ViewBag.Banner = false;
        }
        <vc:search-component></vc:search-component>
    </div>
    <div class="path">
        <div class="container">
            <a href="/" title="@ResourceData.Resource("TrangChu", ViewBag.Lang)">
                <svg xmlns="http://www.w3.org/2000/svg" height="15" viewBox="0 0 576 512">
                    <path d="M575.8 255.5c0 18-15 32.1-32 32.1h-32l.7 160.2c0 2.7-.2 5.4-.5 8.1V472c0 22.1-17.9 40-40 40H456c-1.1 0-2.2 0-3.3-.1c-1.4 .1-2.8 .1-4.2 .1H416 392c-22.1 0-40-17.9-40-40V448 384c0-17.7-14.3-32-32-32H256c-17.7 0-32 14.3-32 32v64 24c0 22.1-17.9 40-40 40H160 128.1c-1.5 0-3-.1-4.5-.2c-1.2 .1-2.4 .2-3.6 .2H104c-22.1 0-40-17.9-40-40V360c0-.9 0-1.9 .1-2.8V287.6H32c-18 0-32-14-32-32.1c0-9 3-17 10-24L266.4 8c7-7 15-8 22-8s15 2 21 7L564.8 231.5c8 7 12 15 11 24z" />
                </svg>
            </a>
            <div class="icon">
                <svg xmlns="http://www.w3.org/2000/svg" width="8" height="8" fill="currentColor"
                     class="bi bi-chevron-right" viewBox="0 0 16 16">
                    <path fill-rule="evenodd"
                          d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z" />
                </svg>
            </div>
            <vc:bread-crumb-component module-id="@Model.ModuleItem.ParentID"></vc:bread-crumb-component>
            <div>@Model.ModuleItem.Name</div>
        </div>
    </div>

    <div class="type-tour main">
        <div class="container">
            @foreach (AdvertisingItem item in Model.AdvertisingItems)
            {
                @if (!string.IsNullOrEmpty(item.LinkUrl))
                {
                    <a href="@item.LinkUrl" title="@item.Name" class="item">
                        <div class="img">
                            @Html.Raw(Utility.GetImage(WebConfig.PathServer, item.UrlPicture, item.Name))
                        </div>
                        <h3 class="big-title title-item">@item.Name</h3>
                    </a>
                }
                else
                {
                    <div class="item">
                        <div class="img">
                            @Html.Raw(Utility.GetImage(WebConfig.PathServer, item.UrlPicture, item.Name))
                        </div>
                        <h3 class="big-title title-item">@item.Name</h3>
                    </div>
                }
            }
        </div>
    </div>

    <div class="endow-tour">
        <div class="container">
            <div class="top">
                <h1 class="big-title uppercase border">@Model.ModuleItem.Name</h1>
                @if (!string.IsNullOrEmpty(Model.ModuleItem.Content))
                {
                    <div class="paragraph justify fs14 detail-content">
                        @Html.Raw(Model.ModuleItem.Content)
                    </div>
                    <div class="more other fs16 end">
                        <p>@ResourceData.Resource("XemThem", ViewBag.Lang)</p>
                        <div class="icon">
                            <svg xmlns="http://www.w3.org/2000/svg" width="8" height="8" fill="currentColor"
                                 class="bi bi-chevron-right" viewBox="0 0 16 16">
                                <path fill-rule="evenodd"
                                      d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z" />
                            </svg>
                        </div>
                    </div>
                }
            </div>
            <div class="bot">
                <div class="left">
                    @if (Model.ListModulesItemTour.Any(x => x.ParentID == Model.ModuleItem.ID))
                    {
                        <div class="list-type">
                            <div class="big-title title-item uppercase">
                                <p>@Model.ModuleItem.Name</p>
                            </div>

                            <div class="list">
                                @foreach (var module in Model.ListModulesItemTour.Where(x => x.ParentID == Model.ModuleItem.ID))
                                {
                                    <div class="item">
                                        <div class="title">
                                            <p><strong><a href="@Utility.Link(module.NameAscii, string.Empty, module .LinkUrl)" title="@module.Name">@module.Name</a></strong></p>
                                            @if (Model.ListModulesItemTour.Any(x => x.ParentID == module.ID))
                                            {
                                                <div class="icon btn-down">
                                                    <svg xmlns="http://www.w3.org/2000/svg" height="11px" viewBox="0 0 512 512">
                                                        <path d="M233.4 406.6c12.5 12.5 32.8 12.5 45.3 0l192-192c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L256 338.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l192 192z" />
                                                    </svg>
                                                </div>
                                            }
                                        </div>
                                        @if (Model.ListModulesItemTour.Any(x => x.ParentID == module.ID))
                                        {
                                            <ul>
                                                @foreach (var item in Model.ListModulesItemTour.Where(x => x.ParentID == module.ID))
                                                {
                                                    <li><a href="@Utility.Link(item.NameAscii, string.Empty, item .LinkUrl)" title="@item.Name">@item.Name</a></li>
                                                }
                                                <li><a href="#">@ResourceData.Resource("XemTatCa",ViewBag.Lang)</a></li>
                                            </ul>
                                        }

                                    </div>
                                }
                            </div>
                        </div>
                    }
                    @if (Model.ListContentItemHot.Any())
                    {
                        <div class="list-news">
                            <div class="big-title title-item uppercase">
                                <p>@ResourceData.Resource("TinTucNoiBat", ViewBag.Lang)</p>
                            </div>
                            <div class="list">
                                @foreach (var item in Model.ListContentItemHot)
                                {
                                    <div class="item item-news left-position">
                                        <div class="text">
                                            <div class="time">
                                                <p>@(item.CreatedDate.HasValue ? item.CreatedDate.Value.ToString("dd/MM/yyyy") : string.Empty)</p>
                                            </div>
                                            <h3 class="big-title title-item">
                                                <a href="@Utility.Link(item.NameAscii, string.Empty, item.LinkUrl)" title="@item.Name">
                                                    @item.Name
                                                </a>
                                            </h3>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
                <div class="right">
                    <div class="title">
                        <div class="left-title">
                            <p>@ResourceData.Resource("DanhSachCacTour", ViewBag.Lang) @Model.ModuleItem.Name</p>
                        </div>
                        <div class="right-title">
                            <p>Sắp xếp theo:</p>
                            <select name="Order" id="OrderProductTour">
                                <option value="5">Sắp xếp mới nhất</option>
                                <option value="6">Sắp xếp cũ nhất</option>
                                <option value="7">Sắp xếp a-z</option>
                                <option value="8">Sắp xếp z-a</option>
                            </select>
                        </div>
                    </div>
                    @if (Model.ListProductItem.Any())
                    {
                        int rest = Model.Total.Value - Model.ListProductItem.Count();
                        <input type="hidden" name="moduleId" class="ModuleId" value="@Model.ModuleItem.ID" />
                        <div class="list-tour" id="grid-load">
                            @foreach (var item in Model.ListProductItem)
                            {
                                <div class="item item-tour flex1">
                                    <a href="@Utility.Link(item._NameAscii, string.Empty, item.LinkUrl)" title="@item.Name" class="img-tour">
                                        <div class="img">
                                            @Html.Raw(Utility.GetImage(WebConfig.PathServer, item.UrlPicture, item.Name))
                                        </div>
                                        <div class="info">
                                            <div class="time">
                                                <p>@ResourceData.Resource("Tu", ViewBag.Lang) @item.Address</p>
                                            </div>
                                            <div class="price">
                                                <p>@Utility.GetFormatPriceType(item.Price, 1, ResourceData.Resource("LienHe", ViewBag.Lang), true)</p>
                                            </div>
                                        </div>
                                    </a>
                                    <div class="text">
                                        <h3 class="big-title">
                                            <a href="@Utility.Link(item._NameAscii, string.Empty, item.LinkUrl)" title="@item.Name">
                                                @item.Name
                                            </a>
                                        </h3>
                                        <div class="paragraph">
                                            @Html.Raw(item.Description)
                                        </div>
                                        <div class="info">
                                            <div class="item-info">
                                                <svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 512 512">
                                                    <path d="M464 256A208 208 0 1 1 48 256a208 208 0 1 1 416 0zM0 256a256 256 0 1 0 512 0A256 256 0 1 0 0 256zM232 120V256c0 8 4 15.5 10.7 20l96 64c11 7.4 25.9 4.4 33.3-6.7s4.4-25.9-6.7-33.3L280 243.2V120c0-13.3-10.7-24-24-24s-24 10.7-24 24z" />
                                                </svg>
                                                <p>@item.TimesValue</p>
                                            </div>
                                            <div class="item-info">
                                                <svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 448 512">
                                                    <path d="M128 0c13.3 0 24 10.7 24 24V64H296V24c0-13.3 10.7-24 24-24s24 10.7 24 24V64h40c35.3 0 64 28.7 64 64v16 48V448c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V192 144 128C0 92.7 28.7 64 64 64h40V24c0-13.3 10.7-24 24-24zM400 192H48V448c0 8.8 7.2 16 16 16H384c8.8 0 16-7.2 16-16V192zM329 297L217 409c-9.4 9.4-24.6 9.4-33.9 0l-64-64c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0l47 47 95-95c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9z" />
                                                </svg>
                                                <p>@item.TimeStart.ToString("dd/MM/yyyy")</p>
                                            </div>
                                            <div class="item-info">
                                                <svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 448 512">
                                                    <path d="M304 128a80 80 0 1 0 -160 0 80 80 0 1 0 160 0zM96 128a128 128 0 1 1 256 0A128 128 0 1 1 96 128zM49.3 464H398.7c-8.9-63.3-63.3-112-129-112H178.3c-65.7 0-120.1 48.7-129 112zM0 482.3C0 383.8 79.8 304 178.3 304h91.4C368.2 304 448 383.8 448 482.3c0 16.4-13.3 29.7-29.7 29.7H29.7C13.3 512 0 498.7 0 482.3z" />
                                                </svg>
                                                <p>
                                                    @if (!Utility.IsMobile(Context.Request.Headers["User-Agent"]))
                                                    {
                                                        <span>@ResourceData.Resource("SoChoCon",ViewBag.Lang): </span>
                                                    }
                                                    @item.Quantity
                                                </p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            @if (rest > 0)
                            {
                                <div class="btn-block">
                                    <div class="btn-page more other-padding" data-page="@(Model.Page + 1)">
                                        <p>@ResourceData.Resource("XemNhieuHon", ViewBag.Lang)</p>
                                        <div class="icon">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="9" height="9" fill="currentColor"
                                                 class="bi bi-chevron-right" viewBox="0 0 16 16">
                                                <path fill-rule="evenodd"
                                                      d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z" />
                                            </svg>
                                        </div>
                                    </div>
                                </div>

                            }
                        </div>
                    }
                    else
                    {
                        <p class="update center">@ResourceData.Resource("DangCapNhat", ViewBag.Lang)</p>
                    }
                    @if (Model.ListSystemTags.Any())
                    {
                        <div class="tag">
                            <p>
                                <strong>TAG:</strong>
                                @foreach (var item in Model.ListSystemTags.OrderBy(x => x.OrderBy))
                                {
                                    <a href="/tu-khoa-bai-viet/@item.NameAscii" title="@item.Name" rel="nofollow" target="_blank">@item.Name</a>
                                }
                            </p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    <input value="@Model.ModuleItem.NameAscii" id="seoUrl" type="hidden" />
    <input type="hidden" id="page" value="@Model.Page" />
    <script defer src="/html/process/product.js"></script>
    string breadcrum = string.Empty;
    if (Model.BreadcrumbList.Any())
    {
        int b = 1;
        foreach (var module in Model.BreadcrumbList.OrderByDescending(x => x.OrderTree))
        {
            if (string.IsNullOrEmpty(module.LinkUrl) || (!string.IsNullOrEmpty(module.LinkUrl) && !module.LinkUrl.Contains("http://") && !module.LinkUrl.Contains("https://")))
            {
                breadcrum += ",{\"@type\": \"ListItem\", \"position\": " + b + ", \"name\": \"" + Html.Raw(module.Name) + "\",\"item\": \"" + WebConfig.Website + Utility.Link(module.NameAscii, string.Empty, module.LinkUrl) + "\"}";
            }
            b++;
        }
    }
    @if (Model.Schema != null && !string.IsNullOrEmpty(Model.Schema.Content))
    {
        @Html.Raw(Model.Schema.Content.Replace("[Breadcrumb]", breadcrum))
    }
}