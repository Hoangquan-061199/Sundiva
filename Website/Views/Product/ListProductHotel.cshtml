@model ModuleViewModels
@using ADCOnline.Simple.Item
@using ADCOnline.Simple.Json
@using ADCOnline.Utils
@{
    if (ViewBag.NoIndex == true)
    {
        Layout = "~/Views/shared/_LayoutNoIndex.cshtml";
    }
    if (Model.ModuleItem != null)
    {
        ViewBag.Title = Model.ModuleItem.SEOTitle;
        if (Model.Page == 1)
        {
            ViewBag.Title = Model.ModuleItem.SEOTitle;
        }
        ViewBag.Name = Model.ModuleItem.Name;
        ViewBag.Description = Model.ModuleItem.SeoDescription;
        ViewBag.Keywords = Model.ModuleItem.SeoKeyword;
    }
    ViewBag.IndexGoogle = ViewBag.NoIndex == true ? "noodp,noindex,nofollow" : Model.ModuleItem.IndexGoogle;
    ViewBag.Canonical = !string.IsNullOrEmpty(Model.ModuleItem.Canonical) ? Model.ModuleItem.Canonical : string.Empty;
    ViewBag.UrlOgImage = !string.IsNullOrEmpty(Model.ModuleItem.UrlPicture) ? Model.ModuleItem.UrlPicture : string.Empty;
    ViewBag.OgImageAlt = !string.IsNullOrEmpty(Model.ModuleItem.SEOTitle) ? Model.ModuleItem.SEOTitle : string.Empty;
    ViewBag.IsSchema = false;
    ViewBag.Banner = true;
}
@if (Model.ModuleItem != null)
{
    if (Model.ModuleItem.AlbumGalleryItems.Any())
    {
        if (Model.ModuleItem.AlbumGalleryItems.Count() == 1)
        {
            <div class="banner margin0 banner-content">
                <div class="item">
                    @Html.Raw(Utility.GetImage(WebConfig.PathServer, Model.ModuleItem.AlbumGalleryItems.FirstOrDefault(x => x.AlbumType == 3).AlbumUrl, Model.ModuleItem.Name))
                </div>
            </div>
        }
        else
        {
            <div class="banner margin0 banner-content">
                <div class="slide-index owl-carousel owl-theme">
                    @foreach (AlbumGalleryItem item in Model.ModuleItem.AlbumGalleryItems.Where(x => x.AlbumType == 3))
                    {
                        <div class="item">
                            @Html.Raw(Utility.GetImage(WebConfig.PathServer, item.AlbumUrl, Model.ModuleItem.Name))
                        </div>
                    }
                </div>
            </div>

        }
    }

    <div class="path">
        <div class="container">
            <a href="/" title="@ResourceData.Resource("TrangChu", ViewBag.Lang)">
                <svg xmlns="http://www.w3.org/2000/svg" height="15" viewBox="0 0 576 512">
                    <path d="M575.8 255.5c0 18-15 32.1-32 32.1h-32l.7 160.2c0 2.7-.2 5.4-.5 8.1V472c0 22.1-17.9 40-40 40H456c-1.1 0-2.2 0-3.3-.1c-1.4 .1-2.8 .1-4.2 .1H416 392c-22.1 0-40-17.9-40-40V448 384c0-17.7-14.3-32-32-32H256c-17.7 0-32 14.3-32 32v64 24c0 22.1-17.9 40-40 40H160 128.1c-1.5 0-3-.1-4.5-.2c-1.2 .1-2.4 .2-3.6 .2H104c-22.1 0-40-17.9-40-40V360c0-.9 0-1.9 .1-2.8V287.6H32c-18 0-32-14-32-32.1c0-9 3-17 10-24L266.4 8c7-7 15-8 22-8s15 2 21 7L564.8 231.5c8 7 12 15 11 24z" />
                </svg>
            </a>
            <div class="icon">
                <svg xmlns="http://www.w3.org/2000/svg" width="8" height="8" fill="currentColor"
                     class="bi bi-chevron-right" viewBox="0 0 16 16">
                    <path fill-rule="evenodd"
                          d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z" />
                </svg>
            </div>
            <vc:bread-crumb-component module-id="@Model.ModuleItem.ParentID"></vc:bread-crumb-component>
            <div>@Model.ModuleItem.Name</div>
        </div>
    </div>

    <div class="hotel">
        <div class="container">
            <h1 class="big-title uppercase border">@Model.ModuleItem.Name</h1>
            <div class="paragraph justify">
                @Html.Raw(Model.ModuleItem.Description)
            </div>
            @if (Model.ListProductItem.Any())
            {
                int rest = Model.Total.Value - Model.ListProductItem.Count();
                <input type="hidden" name="moduleId" class="ModuleId" value="@Model.ModuleItem.ID" />
                <h2 class="big-title title-list">@ResourceData.Resource("DanhSach",ViewBag.Lang) @Model.ModuleItem.Name @ResourceData.Resource("TieuBieu",ViewBag.Lang)</h2>
                <div class="list-hotel" id="grid-load">
                    @foreach (var item in Model.ListProductItem)
                    {
                        <div class="item item-tour item-hotel">
                            <a href="@Utility.Link(item.NameAscii, string.Empty, item.LinkUrl)" title="@item.Name" class="img-tour">
                                <div class="img">
                                    @Html.Raw(Utility.GetImage(WebConfig.PathServer, item.UrlPicture, item.Name))
                                </div>
                                <div class="info">
                                    <div class="time">
                                        <div class="icon">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-geo-alt" viewBox="0 0 16 16">
                                                <path d="M12.166 8.94c-.524 1.062-1.234 2.12-1.96 3.07A31.493 31.493 0 0 1 8 14.58a31.481 31.481 0 0 1-2.206-2.57c-.726-.95-1.436-2.008-1.96-3.07C3.304 7.867 3 6.862 3 6a5 5 0 0 1 10 0c0 .862-.305 1.867-.834 2.94zM8 16s6-5.686 6-10A6 6 0 0 0 2 6c0 4.314 6 10 6 10z" />
                                                <path d="M8 8a2 2 0 1 1 0-4 2 2 0 0 1 0 4zm0 1a3 3 0 1 0 0-6 3 3 0 0 0 0 6z" />
                                            </svg>
                                        </div>
                                        <p>@item.Address</p>
                                    </div>
                                    <div class="price">
                                        <p>@Utility.GetFormatPriceType(item.Price, 1, ResourceData.Resource("LienHe", ViewBag.Lang), true)</p>
                                    </div>
                                </div>
                            </a>
                            <div class="text">
                                <h3 class="big-title title-item center">
                                    <a href="@Utility.Link(item.NameAscii, string.Empty, item.LinkUrl)" title="@item.Name">@item.Name</a>
                                </h3>
                                <div class="rating">
                                    @{
                                        int length = item.Star;
                                    }
                                    @for (int i = 1; i <= length; i++)
                                    {
                                        <div class="item-star">
                                            <svg xmlns="http://www.w3.org/2000/svg" height="15px"
                                                 viewBox="0 0 576 512">
                                                <path d="M316.9 18C311.6 7 300.4 0 288.1 0s-23.4 7-28.8 18L195 150.3 51.4 171.5c-12 1.8-22 10.2-25.7 21.7s-.7 24.2 7.9 32.7L137.8 329 113.2 474.7c-2 12 3 24.2 12.9 31.3s23 8 33.8 2.3l128.3-68.5 128.3 68.5c10.8 5.7 23.9 4.9 33.8-2.3s14.9-19.3 12.9-31.3L438.5 329 542.7 225.9c8.6-8.5 11.7-21.2 7.9-32.7s-13.7-19.9-25.7-21.7L381.2 150.3 316.9 18z" />
                                            </svg>
                                        </div>
                                    }

                                </div>
                            </div>
                        </div>
                    }
                    @if (rest > 0)
                    {
                        <div class="btn-block">
                            <div class="btn-page more other-padding" data-page="@(Model.Page + 1)">
                                <p>@ResourceData.Resource("XemNhieuHon", ViewBag.Lang)</p>
                                <div class="icon">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="9" height="9" fill="currentColor"
                                         class="bi bi-chevron-right" viewBox="0 0 16 16">
                                        <path fill-rule="evenodd"
                                              d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z" />
                                    </svg>
                                </div>
                            </div>
                        </div>

                    }
                </div>
            }
        </div>
    </div>
    <input value="@Model.ModuleItem.NameAscii" id="seoUrl" type="hidden" />
    <input type="hidden" id="page" value="@Model.Page" />
    <script defer src="/html/process/product.js"></script>
    string breadcrum = string.Empty;
    if (Model.BreadcrumbList.Any())
    {
        int b = 1;
        foreach (var module in Model.BreadcrumbList.OrderByDescending(x => x.OrderTree))
        {
            if (string.IsNullOrEmpty(module.LinkUrl) || (!string.IsNullOrEmpty(module.LinkUrl) && !module.LinkUrl.Contains("http://") && !module.LinkUrl.Contains("https://")))
            {
                breadcrum += ",{\"@type\": \"ListItem\", \"position\": " + b + ", \"name\": \"" + Html.Raw(module.Name) + "\",\"item\": \"" + WebConfig.Website + Utility.Link(module.NameAscii, string.Empty, module.LinkUrl) + "\"}";
            }
            b++;
        }
    }
    @if (Model.Schema != null && !string.IsNullOrEmpty(Model.Schema.Content))
    {
        @Html.Raw(Model.Schema.Content.Replace("[Breadcrumb]", breadcrum))
    }
}