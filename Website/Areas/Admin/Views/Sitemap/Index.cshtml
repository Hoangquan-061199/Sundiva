@model Website.Areas.Admin.ViewModels.HomeAdminViewModel
@using Website.Utils
@using ADCOnline.Utils
@{
    ViewBag.Title = "Quản lý sitemap";
    ViewBag.RolesView = Model.SystemActionAdmin.View;
    ViewBag.RolesSearch = false;
    ViewBag.RolesAdd = Model.SystemActionAdmin.Add;
    ViewBag.RolesEdit = Model.SystemActionAdmin.Edit;
    ViewBag.RolesExcel = false;
    ViewBag.RolesPrint = false;
    ViewBag.RolesCreateFile = false;
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@if (Model.SystemActionAdmin.View)
{
    <link href="/lib/select-bootstrap/bootstrap-select.css" rel="stylesheet" />
    <script src="/lib/select-bootstrap/bootstrap-select.js"></script>
    <div class="col-sm-12">
        @if (Model.ListModule.Any())
        {
            @foreach (var item in Model.ListModule.Where(x => x.ParentID == Model.Module.ParentID).OrderBy(x => x.Ord))
            {
                <a href="@Utility.LinkAdmin(WebConfig.AdminAlias+"/"+item.Tag,"Index",item.Redirect)" class="badge @(Model.Module.ID == item.ID ? "badge-warning" : "badge-info")">@item.NameModule</a>
            }
        }
    </div>
    <div class="tab-content">
        <div class="tab-pane active fade in" id="tab_search">
            <div class="ct_tabssc">
                <form id="searchFrm">
                    <div class="w_searchgr">
                        <div class="form-group form-inline">
                            <input type="text" class="form-control title" name="Keyword" placeholder="Nhập từ khóa cần tìm">
                            @if (Model.WebsiteModuleAdmins.Any(x => x.ModuleTypeCode != StaticEnum.Trademark) && Model.WebsiteModuleAdmins.Count(x => x.ModuleTypeCode != StaticEnum.Trademark) > 0)
                            {
                                <select class="form-control change-search selectpicker" name="ModuleId" id="ModuleId" data-container="body" data-live-search="true" title="-- Danh mục --" data-hide-disabled="true">
                                    <option value="" data-type="">-- Tất cả --</option>
                                    @foreach (var parent in Model.WebsiteModuleAdmins.Where(x => x.ParentID == 0 && x.ModuleTypeCode != StaticEnum.Trademark).OrderBy(x => x.OrderDisplay))
                                    {
                                        <option value="@parent.ID" data-type="@parent.ModuleTypeCode">@parent.Name</option>
                                        foreach (var module in Model.WebsiteModuleAdmins.Where(x => x.ParentID == parent.ID).OrderBy(x => x.OrderDisplay))
                                        {
                                            <option value="@module.ID" data-type="@module.ModuleTypeCode">- @module.Name -</option>
                                            foreach (var item in Model.WebsiteModuleAdmins.Where(x => x.ParentID == module.ID).OrderBy(x => x.OrderDisplay))
                                            {
                                                <option value="@item.ID" data-type="@item.ModuleTypeCode">-- @item.Name --</option>
                                                foreach (var item1 in Model.WebsiteModuleAdmins.Where(x => x.ParentID == item.ID).OrderBy(x => x.OrderDisplay))
                                                {
                                                    <option value="@item1.ID" data-type="@item1.ModuleTypeCode">--- @item1.Name ---</option>
                                                }
                                            }
                                        }
                                    }
                                </select>
                            }
                            <select class="form-control" name="type" id="type">
                                <option value="">-- Priority --</option>
                                <option value="100">100</option>
                                <option value="80-60">80-60</option>
                                <option value="60-40">60-40</option>
                            </select>
                            <select class="form-control" name="Status" id="Status">
                                <option value="">-- Change frequency --</option>
                                <option value="Always">Always</option>
                                <option value="Hourly">Hourly</option>
                                <option value="Daily">Daily</option>
                                <option value="Weekly">Weekly</option>
                                <option value="Monthly">Monthly</option>
                                <option value="Yearly">Yearly</option>
                                <option value="Never">Never</option>
                            </select>
                            <button type="button" class="btn btn-info" id="btnSearch"><i class="lnr lnr-magnifier fa-fw" aria-hidden="true"></i> Tìm kiếm</button>
                            @if (Model.SystemActionAdmin.Add )
                            {
                                <a href="javascript:" id="ResetSitemap" class="btn btn-default">Reset sitemap</a>
                            }
                        </div>
                    </div>
                </form>
                <div class="w_tablegr" id="loadGridView"></div>
            </div>
        </div>
        <div class="tab-pane fade" id="tab_add"></div>
    </div>
    <script>
        $(function() {
            ValidInput();
            $('.selectpicker').selectpicker();
            urlPostAction = "@Url.Action("Actions")";
            urlForm = '@Url.Action("AjaxForm")';
            initAjaxLoad("@Url.Action("ListItems")", "#loadGridView");
            var form = $("#searchFrm");
            $("#btnSearch").click(function() {
                window.location.href = '#' + getValueFormMutilSelect(form);
                return false;
            });
            $('#ResetSitemap').click(function(e) {
                e.preventDefault();
                $('#ResetSitemap').hide();
                urlReset = '@Url.Action("ResetAllSitemap", "Sitemap")';
                $.post(urlReset, function(data) {
                    if (!data.errors) {
                        $.growl.notice({ title: "Thông báo", message: data.message, location: 'br', size: 'large', duration: 3000 });
                        setInterval(function() { window.location.reload(); }, 1000);
                    } else
                        $.growl.error({ title: "Thông báo", message: data.message, location: 'br', size: 'large', duration: 3000 });
                    $('#ResetSitemap').show();
                });
                return false;
            });
        });
    </script>

}
