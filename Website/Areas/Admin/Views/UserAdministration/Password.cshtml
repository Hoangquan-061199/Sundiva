@*@using System.Globalization
@model ADCWebsite.Areas.Admin.Models.UserAdministration.DetailsViewModel
@{
    ViewBag.Title = "User Details: " + Model.DisplayName;
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<section class="content-header">
    <h1 class="mvcMembership">Đổi mật khẩu: @Model.DisplayName [@Model.Status]</h1>
    <ol class="breadcrumb">
        <li><a href="/admin"><i class="fa fa-home"></i>Trang chủ</a></li>
        <li class="active">Đổi mật khẩu</li>
    </ol>
</section>
<div class="content">

    <div class="box" id="gridItems">
        <div class="box-body table-responsive">
            <link href='@Url.Content("~/Content/Publishing/css/MvcMembership.css")' rel="stylesheet" type="text/css" />
            <h3 class="mvcMembership">User Details: @Model.DisplayName [@Model.Status]</h3>

            <div class="mvcMembership-tabs">
                @Html.ActionLink("Details", "Details", "UserAdministration", new { id = Model.User.ProviderUserKey }, new { @class = "btn btn-success" })
                <a href="#" class="btn btn-success">Passwold</a>
                @if (Model.IsRolesEnabled) {
                    @Html.ActionLink("Roles", "UsersRoles", "UserAdministration", new { id = Model.User.ProviderUserKey }, new { @class = "btn btn-success" })
                }
            </div>

            <h3 class="mvcMembership">Password</h3>

            @if (Model.User.IsLockedOut) {
                <p>Locked out since @Model.User.LastLockoutDate.ToString("MMMM dd, yyyy h:mm:ss tt", CultureInfo.InvariantCulture)</p>
                using (Html.BeginForm("Unlock", "UserAdministration", new { id = Model.User.ProviderUserKey })) {
                    <input type="submit" value="Unlock Account" />
                }
            } else {

                if (Model.User.LastPasswordChangedDate == Model.User.CreationDate) {
                    <dl class="mvcMembership">
                        <dt>Last Changed:</dt>
                        <dd><em>Never</em></dd>
                    </dl>
                } else {
                    <dl class="mvcMembership">
                        <dt>Last Changed:</dt>
                        <dd>@Model.User.LastPasswordChangedDate.ToString("MMMM dd, yyyy h:mm:ss tt", CultureInfo.InvariantCulture)</dd>
                    </dl>
                }
                <table id="tblContent" class="table table-bordered table-striped">
                    @if (Model.CanResetPassword && Model.RequirePasswordQuestionAnswerToResetPassword) {
                        using (Html.BeginForm("ResetPasswordWithAnswer", "UserAdministration", new { id = Model.User.ProviderUserKey })) {
                            <tr>
                                <td>
                                    <dl class="mvcMembership">
                                        <dt>Password Question:</dt>
                                        if(string.IsNullOrEmpty(Model.User.PasswordQuestion) || string.IsNullOrEmpty(Model.User.PasswordQuestion.Trim())){
                                        <dd><em>No password question defined.</em></dd>
                                        }else{
                                        <dd>@Model.User.PasswordQuestion</dd>
                                        }
                                    </dl>
                                </td>
                                <td>
                                    <label for="answer">Password Answer:</label>
                                    @Html.TextBox("answer")
                                </td>

                            </tr>
                        }
                        <tr>
                            <td colspan="2">
                                <input type="submit" value="Reset to Random Password and Email User" class="btn btn-success" />
                            </td>
                        </tr>
                    } else if (Model.CanResetPassword) {
                        <tr>
                            @using (Html.BeginForm("SetPassword", "UserAdministration", new { id = Model.User.ProviderUserKey })) {

                                <td>
                                    <label for="password">New Password:</label>
                                    <input id="password" name="password" type="text" value="" required class="form-control">
                                </td>
                                <td>
                                    <input type="submit" value="Change Password" class="btn btn-success p-top-25" />
                                </td>


                            }
                            @using (Html.BeginForm("ResetPassword", "UserAdministration", new { id = Model.User.ProviderUserKey })) {
                                <td>
                                    <input type="submit" value="Reset to Random Password and Email User" class="btn btn-success p-top-25" />
                                </td>
                            }
                        </tr>
                    }
                </table>
            }
        </div>
    </div>

</div>*@